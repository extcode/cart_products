cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
  paths:
    - .composer/
    - .php_cs.cache

variables:
  COMPOSER_CACHE_DIR: ".composer"
  TYPO3_PATH_WEB: "$CI_PROJECT_DIR/.build/public"
  MYSQL_DATABASE: "typo3"
  MYSQL_ROOT_PASSWORD: "joh316"
  typo3DatabaseName: "typo3"
  typo3DatabaseHost: "mysql"
  typo3DatabaseUsername: "root"
  typo3DatabasePassword: "joh316"

before_script:
  - apk add git --update

stages:
  - lint
  - test
  - documentation

lint:cgl:
  image: $CI_REGISTRY/containers/phpunit-with-php-8.1:main
  stage: lint
  before_script:
    - sed -i -e "s#ssh://git@code.extco.de:22722#https://gitlab-ci-token:$CI_JOB_TOKEN@code.extco.de#g" composer.json
    - composer config platform.php 8.1
    - composer remove typo3/cms-core --no-update
    - composer install --no-progress --no-ansi --no-interaction
  script:
    - vendor/bin/php-cs-fixer fix --config=Build/.php-cs-fixer.dist.php -v --dry-run --using-cache=no --path-mode=intersection ./

lint:typoscriptcgl:
  image: php:8.1-alpine
  stage: lint
  before_script:
    - apk add --no-cache bash curl git mercurial openssh openssl parallel subversion tini zlib-dev libzip-dev zip icu-dev g++
    - docker-php-ext-install mysqli && docker-php-ext-install zip && docker-php-ext-configure intl && docker-php-ext-install intl && docker-php-ext-enable intl
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - sed -i -e "s#ssh://git@code.extco.de:22722#https://gitlab-ci-token:$CI_JOB_TOKEN@code.extco.de#g" composer.json
    - composer config platform.php 8.1
    - composer remove typo3/cms-core --no-update
    - composer install --no-progress --no-ansi --no-interaction
  script:
    - vendor/bin/typoscript-lint -c Build/typoscriptlint.yaml Configuration

lint:yaml:
  stage: lint
  image: python:alpine3.7
  before_script:
    - pip install yamllint==1.10.0
  script:
    - yamllint -c Build/yamllint.yaml Configuration/ Resources/

.lint_php: &lint_php
  stage: lint
  image: $CONTAINER_IMAGE
  script:
    - find *.php Classes Configuration Tests -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l

lint:php81:
  <<: *lint_php
  stage: lint
  variables:
    CONTAINER_IMAGE: php:8.1-alpine

lint:php82:
  <<: *lint_php
  variables:
    CONTAINER_IMAGE: php:8.2-alpine

lint:php83:
  <<: *lint_php
  variables:
    CONTAINER_IMAGE: php:8.3-alpine

phpstan:analyse:
  image: $CI_REGISTRY/containers/phpunit-with-php-8.1:main
  stage: lint
  before_script:
    - sed -i -e "s#ssh://git@code.extco.de:22722#https://gitlab-ci-token:$CI_JOB_TOKEN@code.extco.de#g" composer.json
    - composer config platform.php 8.1
    - composer install --no-progress --no-ansi --no-interaction
  script:
    - vendor/bin/phpstan analyse -c Build/phpstan.neon --memory-limit 256M

.test_php: &test_php
  stage: test
  services:
  - mysql:5
  image: $CONTAINER_IMAGE
  only:
    - branches
  before_script:
    - composer config --no-plugins allow-plugins.typo3/cms-composer-installers true
    - composer config --no-plugins allow-plugins.typo3/class-alias-loader true
    - composer require typo3/cms-core="${TYPO3_VERSION}"
  script:
    - vendor/bin/phpunit -c Build/UnitTests.xml
    - typo3DatabaseDriver=pdo_sqlite vendor/bin/phpunit -c Build/FunctionalTests.xml

# Build in PHP 8.1 and TYPO3 12.4
test:php81:typo3_12:
  <<: *test_php
  variables:
    CONTAINER_IMAGE: $CI_REGISTRY/containers/phpunit-with-php-8.1:main
    TYPO3_VERSION: ^12.4

# Build in PHP 8.2 and TYPO3 12.4
test:php82:typo3_12:
  <<: *test_php
  variables:
    CONTAINER_IMAGE: $CI_REGISTRY/containers/phpunit-with-php-8.2:main
    TYPO3_VERSION: ^12.4

# Build in PHP 8.3 and TYPO3 12.4
test:php83:typo3_12:
  <<: *test_php
  variables:
    CONTAINER_IMAGE: $CI_REGISTRY/containers/phpunit-with-php-8.3:main
    TYPO3_VERSION: ^12.4

.test_codeception: &test_codeception
  stage: test
  image: $CONTAINER_IMAGE
  only:
    - branches
  before_script:
    - sed -i -e "s#ssh://git@code.extco.de:22722#https://gitlab-ci-token:$CI_JOB_TOKEN@code.extco.de#g" composer.json
    - composer config --no-plugins allow-plugins.typo3/cms-composer-installers true
    - composer config --no-plugins allow-plugins.typo3/class-alias-loader true
    - composer require typo3/cms-core="${TYPO3_VERSION}"
  script:
    - mkdir -p .build/public/typo3temp/var/tests/acceptance-sqlite-dbs
    - export typo3DatabaseDriver=pdo_sqlite
    - export PROJECT_ROOT="$(pwd)"
    - export INSTANCE_PATH="$(pwd)/.build/web/typo3temp/var/tests/acceptance"
    - mkdir -p "$INSTANCE_PATH"
    - mkdir -p "$PROJECT_ROOT/.build/web/typo3temp/var/tests/acceptance-logs/"
    - vendor/bin/codecept run
  artifacts:
    paths:
      - .build
    expire_in: 1 day
    when: always

# Build in PHP 8.1 and TYPO3 12.4
test:codception:php81:typo3_12:
  <<: *test_codeception
  variables:
    CONTAINER_IMAGE: $CI_REGISTRY/containers/codeception-with-php-8.1:main
    TYPO3_VERSION: ^12.4
    GECKODRIVER_VERSION: v0.34.0

# Build in PHP 8.2 and TYPO3 12.4
test:codception:php82:typo3_12:
  <<: *test_codeception
  needs:
    - test:codception:php81:typo3_12
  variables:
    CONTAINER_IMAGE: $CI_REGISTRY/containers/codeception-with-php-8.2:main
    TYPO3_VERSION: ^12.4
    GECKODRIVER_VERSION: v0.34.0

# Build in PHP 8.3 and TYPO3 12.4
test:codception:php83:typo3_12:
  <<: *test_codeception
  needs:
    - test:codception:php82:typo3_12
  variables:
    CONTAINER_IMAGE: $CI_REGISTRY/containers/codeception-with-php-8.3:main
    TYPO3_VERSION: ^12.4
    GECKODRIVER_VERSION: v0.34.0

documentation:
  stage: documentation
  image:
    name: ghcr.io/typo3-documentation/render-guides:latest
    entrypoint: [ "" ]
  script:
    - mkdir -p Documentation-GENERATED-temp
    - /opt/guides/entrypoint.sh --config=Documentation --no-progress --fail-on-log
  before_script: []
  artifacts:
    paths:
      - Documentation-GENERATED-temp/
    expire_in: 1 day
    when: always
