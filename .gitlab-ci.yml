cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
  paths:
    - .composer/
    - .php_cs.cache

variables:
  COMPOSER_CACHE_DIR: ".composer"
  TYPO3_PATH_WEB: "$CI_PROJECT_DIR/.build/public"
  MYSQL_DATABASE: "typo3"
  MYSQL_ROOT_PASSWORD: "joh316"
  typo3DatabaseName: "typo3"
  typo3DatabaseHost: "mysql"
  typo3DatabaseUsername: "root"
  typo3DatabasePassword: "joh316"

before_script:
  - apk add git --update

stages:
  - lint
  - test
  - documentation
  - analysis

lint:cgl:
  image: composer:2
  stage: lint
  before_script:
    - composer config platform.php 7.4
    - composer remove typo3/cms-core --no-update
    - composer install --no-progress --no-ansi --no-interaction
  script:
    - .build/bin/php-cs-fixer fix --config=Build/.php-cs-fixer.dist.php -v --dry-run --using-cache=no --path-mode=intersection ./

lint:typoscriptcgl:
  stage: lint
  image: composer:2
  script:
    - composer config platform.php 7.4
    - composer remove typo3/cms-core --no-update
    - composer install --no-progress --no-ansi --no-interaction
    - .build/bin/typoscript-lint -c tslint.yaml

lint:yaml:
  stage: lint
  image: python:alpine3.7
  before_script:
    - pip install yamllint==1.10.0
  script:
    - yamllint -c Build/yamllint.yaml Configuration/ Resources/

lint:php72:
  stage: lint
  image: php:7.2-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

lint:php73:
  stage: lint
  image: php:7.3-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

lint:php74:
  stage: lint
  image: php:7.4-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

lint:php80:
  stage: lint
  image: php:8.0-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

lint:php81:
  stage: lint
  image: php:8.1-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

lint:php82:
  stage: lint
  image: php:8.2-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

lint:php83:
  stage: lint
  image: php:8.3-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

phpstan:analyse:
  image: composer:2
  stage: lint
  before_script:
    - composer config platform.php 7.4
    - composer install --no-progress --no-ansi --no-interaction
    - composer req tpwd/ke_search "^4.4"
  script:
    - .build/bin/phpstan analyse -c Build/phpstan.neon

.test: &test_php
  stage: test
  services:
  - mysql:5
  image: php:$DOCKER_TAG
  only:
    - branches
  before_script:
    - apk add --no-cache bash curl git jq mercurial openssh openssl parallel subversion tini
    - >
      if [[ "$COVERAGE" == "1" ]]; then
        apk add --no-cache $PHPIZE_DEPS
        pecl install xdebug && docker-php-ext-enable xdebug
      fi
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - >
      if [[ "$TYPO3_VERSION" == "^10.4" || "$DOCKER_TAG" == "8.2-alpine" || "$DOCKER_TAG" == "8.3-alpine" ]]; then
        jq -r 'del(."require-dev"."werkraummedia/watchlist")' composer.json > _.json && mv _.json composer.json 
      fi
    - composer config --no-plugins allow-plugins.typo3/cms-composer-installers true
    - composer config --no-plugins allow-plugins.typo3/class-alias-loader true
    - composer require typo3/cms-core="${TYPO3_VERSION}"
  script:
    - >
      if [[ "$COVERAGE" == "0" ]]; then
        .build/bin/phpunit -c Build/UnitTests.xml
      fi
    - >
      if [[ "$COVERAGE" == "1" ]]; then
        .build/bin/phpunit --coverage-clover=phpunit.coverage.xml --log-junit=phpunit.report.xml -c Build/UnitTests.xml
      fi
#    - typo3DatabaseDriver=pdo_sqlite .build/bin/phpunit -c Build/FunctionalTests.xml
  artifacts:
    paths:
      - phpunit.coverage.xml
      - phpunit.report.xml
    expire_in: 1 day
    when: always

test:php72:typo3_10:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.2-alpine
    TYPO3_VERSION: ^10.4
    COVERAGE: 0

test:php73:typo3_10:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.3-alpine
    TYPO3_VERSION: ^10.4
    COVERAGE: 0

test:php74:typo3_10:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.4-alpine
    TYPO3_VERSION: ^10.4
    COVERAGE: 0

test:php74:typo3_11:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.4-alpine
    TYPO3_VERSION: ^11.5
    COVERAGE: 0

test:php80:typo3_11:
  <<: *test_php
  variables:
    DOCKER_TAG: 8.0-alpine
    TYPO3_VERSION: ^11.5
    COVERAGE: 0

test:php81:typo3_11:
  <<: *test_php
  variables:
    DOCKER_TAG: 8.1-alpine
    TYPO3_VERSION: ^11.5
    COVERAGE: 0

test:php82:typo3_11:
  <<: *test_php
  variables:
    DOCKER_TAG: 8.2-alpine
    TYPO3_VERSION: ^11.5
    COVERAGE: 0

test:php83:typo3_11:
  <<: *test_php
  variables:
    DOCKER_TAG: 8.3-alpine
    TYPO3_VERSION: ^11.5
    COVERAGE: 1

documentation:
  stage: documentation
  image:
    name: t3docs/render-documentation:v2.4.0
    entrypoint: [""]
  before_script:
    - cp -a ${CI_PROJECT_DIR}/. /PROJECT
    - mkdir -p ${CI_PROJECT_DIR}/Documentation-GENERATED-temp
  script:
    - cd /ALL/venv
    - /ALL/Menu/mainmenu.sh makehtml-no-cache -c resultdir ${CI_PROJECT_DIR}/Documentation-GENERATED-temp
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/Documentation-GENERATED-temp/Result/project/0.0.0
    expire_in: 1 day
    when: always

sonarqube:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://sonar.extco.de"
    SONAR_PROJECT_NAME: "$CI_PROJECT_NAME"
    SONAR_TOKEN: "$SONAR_TOKEN"
    SONAR_PROJECT_VERSION: "$CI_JOB_ID"
    SONAR_ANALYSIS_MODE: "issues"
    SONAR_SOURCES: "./Classes"
    SONAR_GITLAB_PROJECT_ID: "$CI_PROJECT_ID"
  script:
    - echo "sonar.projectKey=cart_products-4.x" > sonar-project.properties
    - gitlab-sonar-scanner -Dsonar.php.coverage.reportPath=phpunit.coverage.xml -Dsonar.php.tests.reportPath=phpunit.report.xml
  allow_failure: true

sonarqube-reports:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://sonar.extco.de"
    SONAR_PROJECT_NAME: "$CI_PROJECT_NAME"
    SONAR_TOKEN: "$SONAR_TOKEN"
    SONAR_PROJECT_VERSION: "$CI_JOB_ID"
    SONAR_ANALYSIS_MODE: "publish"
    SONAR_SOURCES: "./Classes"
    SONAR_TESTS: "./Tests"
  script:
    - echo "sonar.projectKey=cart_products-4.x" > sonar-project.properties
    - gitlab-sonar-scanner -Dsonar.php.coverage.reportPath=phpunit.coverage.xml -Dsonar.php.tests.reportPath=phpunit.report.xml
